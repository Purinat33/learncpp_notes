# LearnCPP tutorial

## Setting up *each* project.
The tutorial recommend people creating a new project and do the below steps everytime. But since I am ~~lazy~~ compacted, I decided to do those only **once** with each subfolder being 1 tutorial or chapter.

**Remember to select `clang++` when selecting run/debug tasks** (if on MacOS. Have not tried on a Windows yet)

You still need to look inside files like `tasks.json` to see some extra configuration that will be useful in the future or when we create projects from scratch.

Things like:
1. Compiler arguments 
* `-ggdb` argument for **debugging** or `-O2 -DNDEBUG` for **release** build.
* Changing from `${file}` to `*.cpp` to build all C++ files and not just one specific file.
* Adding `-pedantic-errors`: Disable compiler extensions to ensure your programs (and coding practices) remain compliant with C++ standards and will work on any system. (On trying this thing seems to not work)
* Add `-std=g++17` or other g++ version after `g++` help with deprecation error

Command example
```bash
(base) âžœ ~ cd "/Users/me/Desktop/learncpp/" && mkdir -p out && g++ -std=c++17 *.cpp -o out/john && "/Users/me/Desktop/learncpp/"/out/john
```

### Note: 
My *coderunner* extension's `executor map` config (C/C++ section):
* C:
```json
"c": "cd $dir && mkdir -p out && gcc $fileName -o out/$fileNameWithoutExt && $dir/out/$fileNameWithoutExt",
```

* C++:
```json
"cpp": "cd $dir && mkdir -p out && g++ -std=c++17 *.cpp -o out/$fileNameWithoutExt && $dir/out/$fileNameWithoutExt",
```



## My project Config files in `/.vscode`
**tasks.json**:
```json
{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: clang++ build active file",
            "command": "/usr/local/opt/llvm/bin/clang++",
            "args": [
                "-fcolor-diagnostics",
                "-fansi-escape-codes",
                "-ggdb",
                "*.cpp",
                "-o",
                "${fileDirname}/out/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger."
        }
    ],
    "version": "2.0.0"
}
```

**launch.json**:
```json
{
    "configurations": [
        {
            "name": "C/C++: clang++ build and debug active file",
            "type": "cppdbg",
            "request": "launch",
            "program": "${fileDirname}/out/${fileBasenameNoExtension}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "lldb",
            "preLaunchTask": "C/C++: clang++ build active file"
        },
    ],
    "version": "2.0.0"
}

```



